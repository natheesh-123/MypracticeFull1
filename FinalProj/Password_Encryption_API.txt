# In Backend

1. Install Package

dotnet add package Sodium.Core


2. Create Folder/File

Attendance_management/UserServices/HashServiceClass.cs

using Sodium;

namespace Attendance_management.UserServices
{
    public class HashServiceClass
    {
        public string HashPassword(string password)
        {
            return PasswordHash.ArgonHashString(password, PasswordHash.StrengthArgon.Moderate);
        }

        public bool VerifyPassword(string inputPassword, string hashedPassword)
        {
            return PasswordHash.ArgonHashStringVerify(hashedPassword, inputPassword);
        }
    }
}








#Front End

1. Install Library

npm install --save-dev @types/libsodium-wrappers
npm i --save-dev @types/libsodium-wrappers

2. Hash Password

import * as sodium from 'libsodium-wrappers';

// Function to hash the password using Argon2
async function hashPassword(password: string): Promise<string> {
  await sodium.ready; // Ensure libsodium is initialized
  // Hash the password using Argon2
  const hashedPassword = sodium.crypto_pwhash_str(
    password,
    sodium.crypto_pwhash_OPSLIMIT_MODERATE,
    sodium.crypto_pwhash_MEMLIMIT_MODERATE
  );
  return hashedPassword;
}
// Example usage
const password = 'user_password';
hashPassword(password).then(hashedPassword => {
  console.log('Hashed Password:', hashedPassword);
  // Send the hashed password to the backend
  this.http.get(`/api/users/1/verify?password=${hashedPassword}`).subscribe(response => {
    console.log(response); // true or false
  });
});